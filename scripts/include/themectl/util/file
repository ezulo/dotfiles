#!/usr/bin/env bash

# This themectl utility handles common file I/O ops for theming

clear_files() {
    for file in "$@"; do rm -f "$file"; done
}

clear_dir() {
    DIR=$1
    if [ -d "$DIR" ]; then
        rm -rf "$DIR"/*
    fi
}

commit_dir() {
    SRC=$1
    DST=$2
    if [ ! -d "$SRC" ] || [ ! -d "$DST" ]; then return 1; fi
    for file in ${SRC}/*; do
        commit_file "${file}" "${DST}/$(basename $file)"
    done
}

commit_file() {
    SRC=$1
    DST=$2
    if [ -d "$SRC" ]; then
        # DEV WARNING: potential recursion. proceed with care.
        commit_dir "$SRC" "$DST" && return
    fi
    cp "$SRC" "$DST"
    [[ "$DST" =~ ^"$HOME"(/|$) ]] && DST=~${DST#$HOME}
}

# Function for generating (multiline comment) file headers to a file.
# Will overwrite a file. Run this first and then append additional data.
write_file_header() {
    local OUT_FILE="$1"
    local IN_FILE="$2"
    local MODE="${3:-bash}"
    notify-debug $FUNCNAME "Writing file header: $OUT_FILE in mode: $MODE"
    local COMMENT_BEGIN=
    local COMMENT_LINE=
    local COMMENT_END=
    [ ! -z "$MODE" ] && case "$MODE" in
        bash | conf)
            local COMMENT_BEGIN="#"
            local COMMENT_LINE="# "
            local COMMENT_END="#"
            ;;
        c | css)
            local COMMENT_BEGIN="/*"
            local COMMENT_LINE=" * "
            local COMMENT_END=" */"
            ;;
        nocomment)
            local COMMENT_BEGIN=
            local COMMENT_LINE=
            local COMMENT_END=
            ;;
    esac
    local CONTENT="\
        $(basename "$OUT_FILE") was autogenerated by $ID\n\
        theme: $THEME\n\
        timestamp: $(date '+%Y-%m-%d %H:%M:%S') \n\
        \n\
        DO NOT EDIT! Will be overwritten."
    [ ! -z "$IN_FILE" ] && CONTENT="$CONTENT\n\
        To make persistent changes, edit the following file instead:\n\
        --> $IN_FILE\n\
        and perform a \`$ID reload\` to generate a new file."
    CONTENT=$(echo -e "$CONTENT" | sed "s/^ */$COMMENT_LINE/")
    echo -e "$COMMENT_BEGIN\n$CONTENT\n$COMMENT_END\n" > "$OUT_FILE"
}

