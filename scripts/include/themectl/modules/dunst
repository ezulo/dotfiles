#!/usr/bin/env bash

TC_DUNST="$TC_DIR/dunst"
DUNST_CONFIG_DIR="${DUNST_CONFIG_DIR:-$XDG_CONFIG_HOME/dunst}"

dunst_theme() {
    if [ ! -d "$DUNST_CONFIG_DIR" ]; then
        notify-err "$FUNCNAME" \
            "Dunst config directory not found at $DUNST_CONFIG_DIR. Ignoring."
        return 1
    fi
    TMP="/tmp/dunstrc"
    OUT="$DUNST_CONFIG_DIR/dunstrc"
    [ ! -f "$OUT" ] && touch "$OUT"
    clear_files "$TMP"
    echo -e "; DO NOT EDIT, WILL BE OVERWRITTEN" > "$TMP"
    echo -e "; This file was generated by the \`$ID\` script" >> $TMP
    echo -e "; Edit dunstrc.default instead!\n" >> "$TMP"
    cat "$DUNST_CONFIG_DIR/dunstrc.default" >> "$TMP"
    if [ ! -d "$TC_DUNST" ]; then
        TC_DUNST="$TC_SKELETON/dunst"
    fi

    for INFILE in ${TC_DUNST}/*; do
        echo "; Start: $THEME / $INFILE" >> "$TMP"
        cat "$INFILE" >> "$TMP"
        echo -e "; End: $THEME / $INFILE\n" >> "$TMP"
    done
    DUNST_SUM_NEW=$(sha256sum "$TMP" | cut -d " " -f1)
    commit_file "$TMP" "$OUT"
    if [ "$DUNST_SUM_NEW" != "$DUNST_SUM" ]; then
        notify-log $FUNCNAME \
            "Dunst config change detected. Waiting for messages to clear..."
        while [ $(dunstctl "count" "displayed") -gt 0 ]; do sleep 0.1; done
        # Since `dunstctl reload` tends to break dunst, a workaround is to kill
        # it instead, and give the process time to clear.
        killall dunst && sleep 0.1
    fi
}

dunst_reload() {
    # We only reload dunst if necessary in the `dunst_theme` function
    return 0
}

dunst_clean() {
    DUNST_SUM=$(sha256sum "$DUNST_CONFIG_DIR/dunstrc" | cut -d " " -f1)
    cp "$DUNST_CONFIG_DIR/dunstrc.default" "$DUNST_CONFIG_DIR/dunstrc"
}

